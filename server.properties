
debug=true
logdir=console

# load the extension at startup, a snapshot later than august 2002 is required.
extensions = helma.extensions.helmagroups.GroupExtension

# group = multicast | tcp | custom
# "multicast" and "tcp" are preset configurations of JGroups and only view parameters
# may be changed. With option "custom" the whole JGroups-stack may be configured
# and some other features may be turned on or off (see below).
#
group = multicast

group.multicast_ip = 224.0.0.152
group.multicast_port = 16300
group.multicast_ttl  = 32

# group.tcp_hosts = 127.0.0.1
# group.tcp_port = 16300
# group.tcp_portrange = 4


# Specify a file which is used by JGroups for a very detailed debug configuration.
# If just set to "true", JGroups won't debug, but the extension will print some
# debug messages.
#
group.debug = groupdebug.properties


# Specify the name of a group. If another group run on the same network configuration
# their messages will be seen but discarded by JGroups.
#
group.name = theNameOfTheGroup


# A custom configuration string for JGroups. This can be used for debugging purposes
# Basically JGroups-classes are initialized with a string like this and added to a
# stack of protocols that handle all the messages.
#
# If you're not familiar with JGroups don't change this here (apart from the debugging)
#
group.custom = UDP(mcast_addr=224.0.0.150;mcast_port=16300;ip_ttl=32;):\
PING(timeout=2000;num_initial_members=6):\
FD_SOCK:\
VERIFY_SUSPECT(timeout=1500):\
pbcast.STABLE(desired_avg_gossip=10000):\
pbcast.NAKACK(max_xmit_size=16000;gc_lag=5;retransmit_timeout=3000):\
UNICAST(timeout=5000):\
FRAG(down_thread=false;up_thread=false;frag_size=16000):\
pbcast.GMS(join_timeout=5000;join_retry_timeout=2000;shun=false;print_local_addr=true):\
VIEW_ENFORCER:\
pbcast.STATE_TRANSFER(timeout_return_state=0;timeout_get_appl_state=30000)

#
# change the last line to activate JavaGroup's tracing (very heavy debugging):
# pbcast.STATE_TRANSFER(timeout_return_state=0;timeout_get_appl_state=30000):TRACE
#


###########################################################
# just some notes on the config ...
#
# config von STATE_TRANSFER:
# timeout_get_appl_state - default:5000
# timeout_return_state   - default:5000
#
# FRAG:
# default size 8192, sollte reiche lt jg-source, lt benchmarks min > 12000
# je höher frag_size desto schneller der state-transfer (achtung vor jvm-abstürzen,
# wenn der wert zu klein ist), desto langsamer einzelne requests (kaum spürbar allerdings)
#
# + MERGE2 .. damit sich zwei gruppen wiederfinden können
#
# VIEW_ENFORCER
#
#
# aus demos.distributedtreedemo:
#
#props="UDP:PING:FD:STABLE:NAKACK:UNICAST:FRAG:FLUSH:GMS:VIEW_ENFORCER:STATE_TRANSFER:QUEUE";
#
#	// test for pbcast
#	props="UDP(mcast_addr=228.1.2.3;mcast_port=45566;ip_ttl=0):" +
#	    "PING(timeout=5000;num_initial_members=6):" +
#	    "FD_SOCK:" +
#	    "VERIFY_SUSPECT(timeout=1500):" +
#	    "pbcast.STABLE(desired_avg_gossip=10000):" +
#	    "pbcast.NAKACK(gc_lag=5;retransmit_timeout=3000):" +
#	    "UNICAST(timeout=5000):" +
#	    "FRAG(down_thread=false;up_thread=false):" +
#	    "pbcast.GMS(join_timeout=5000;join_retry_timeout=2000;" +
#	    "shun=false;print_local_addr=true):" +
#	    "pbcast.STATE_TRANSFER";


# alt, aus sourcecode:
# public static final String PROPS_MULTICAST_4 = ";mcast_send_buf_size=150000;mcast_recv_buf_size=80000):" + "PING(timeout=2000;num_initial_members=2):MERGE2(min_interval=5000;max_interval=10000):FD_SOCK:VERIFY_SUSPECT(timeout=1500):pbcast.STABLE(desired_avg_gossip=20000):pbcast.NAKACK(gc_lag=50;retransmit_timeout=300,600,1200,2400,4800):UNICAST(timeout=5000;min_wait_time=2000):FRAG(frag_size=8096;down_thread=false;up_thread=false):pbcast.GMS(join_timeout=5000;join_retry_timeout=2000;shun=false;print_local_addr=true):VIEW_ENFORCER:STATE_TRANSFER:QUEUE";



# aus distributedtree:
#
# channel_properties="UDP(mcast_addr=228.1.2.3;mcast_port=45566;ip_ttl=0):" +
# "PING(timeout=5000;num_initial_members=6):" +
# "FD_SOCK:" +
# "VERIFY_SUSPECT(timeout=1500):" +
# "pbcast.STABLE(desired_avg_gossip=10000):" +
# "pbcast.NAKACK(gc_lag=5;retransmit_timeout=3000;trace=true):" +
# "UNICAST(timeout=5000):" +
# "FRAG(down_thread=false;up_thread=false):" +
# "pbcast.GMS(join_timeout=5000;join_retry_timeout=2000;" +
# "shun=false;print_local_addr=true):" +
# "pbcast.STATE_TRANSFER(trace=true)";

# group.custom = UDP(mcast_addr=224.0.0.150;mcast_port=16300;ip_ttl=32;):\
# PING(timeout=2000;num_initial_members=2):FD_SOCK:VERIFY_SUSPECT(num_msgs=3;timeout=1500):\
# pbcast.STABLE(desired_avg_gossip=10000):pbcast.NAKACK(gc_lag=5;retransmit_timeout=3000):\
# UNICAST(timeout=20000):FRAG(down_thread=false;up_thread=false):\
# pbcast.GMS(join_timeout=5000;join_retry_timeout=2000;shun=false;print_local_addr=true):\
# VIEW_ENFORCER:pbcast.STATE_TRANSFER(timeout_return_state=0;timeout_get_appl_state=30000)


